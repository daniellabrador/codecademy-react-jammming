{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/util/Spotify.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","search","bind","handleTermChangeClick","handleTermChangeEnter","term","this","onSearch","document","getElementById","value","e","key","click","className","id","placeholder","onKeyUp","type","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","action","isRemoval","name","artist","album","TrackList","tracks","map","SearchResults","Playlist","handleNameChange","event","target","onNameChange","defaultValue","onChange","onSave","Spotify","_accessToken","_expiresIn","_userId","getAccessToken","window","location","href","match","setTimeout","history","pushState","redirectURLAfterLogin","replaceAll","scopesURLParam","join","fetch","headers","Authorization","response","ok","Error","json","items","unmappedSearchResults","artists","uri","searchResults","console","log","savePlaylist","uriArr","headersObj","method","body","JSON","stringify","createPlaylistResponse","playlistJson","playlistId","uris","App","state","playlistName","playlistTracks","updatePlaylistName","find","playlistTrack","setState","filter","trackURIs","then","results","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9cf4f244.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.search = this.search.bind(this)\r\n    this.handleTermChangeClick = this.handleTermChangeClick.bind(this)\r\n    this.handleTermChangeEnter = this.handleTermChangeEnter.bind(this)\r\n  }\r\n\r\n  search(term){\r\n    this.props.onSearch(term);\r\n  }\r\n\r\n  handleTermChangeClick(){\r\n    const term = document.getElementById('SearchBar').value;\r\n    this.search(term);\r\n  }\r\n\r\n  handleTermChangeEnter(e){    \r\n    if (e.key === 'Enter'){\r\n      document.getElementById('SearchButton').click();\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        <input id=\"SearchBar\" placeholder=\"Enter A Song, Album, or Artist\" onKeyUp={this.handleTermChangeEnter}/>\r\n        <input type=\"submit\" id=\"SearchButton\" className=\"SearchButton\" onClick={this.handleTermChangeClick} value=\"SEARCH\"/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './Track.css';\r\n\r\nexport class Track extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.addTrack = this.addTrack.bind(this)\r\n    this.removeTrack = this.removeTrack.bind(this)\r\n  }\r\n\r\n  addTrack(){\r\n    this.props.onAdd(this.props.track)\r\n  }\r\n\r\n  removeTrack(){\r\n    this.props.onRemove(this.props.track)\r\n  }\r\n\r\n  render(){\r\n    let action;\r\n\r\n    \r\n    if (this.props.isRemoval){\r\n      action = <button className=\"Track-action\" onClick={this.removeTrack}>â€“</button>\r\n    } else {\r\n      action = <button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n    }\r\n\r\n    return (\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <h3>{this.props.track.name}</h3>\r\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Track } from '../Track/Track';\r\nimport './TrackList.css';\r\n\r\nexport class TrackList extends React.Component {\r\n  render(){\r\n    return (\r\n      <div className=\"TrackList\">\r\n          {this.props.tracks.map(track => {\r\n            return <Track track={track} onAdd={this.props.onAdd} onRemove={this.props.onRemove} isRemoval={this.props.isRemoval}/>\r\n          })}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { TrackList } from '../TrackList/TrackList';\r\nimport './SearchResults.css';\r\n\r\nexport class SearchResults extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"SearchResults\">\r\n        <h2>Results</h2>\r\n        <TrackList tracks={this.props.tracks} onAdd={this.props.onAdd} isRemoval={false}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { TrackList } from '../TrackList/TrackList';\r\nimport './Playlist.css';\r\n\r\nexport class Playlist extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n  }\r\n\r\n  handleNameChange(event){\r\n    const name = event.target.value;\r\n    this.props.onNameChange(name)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input defaultValue={this.props.name || \"New Playlist\"}  onChange={this.handleNameChange}/>\r\n        <TrackList name={this.props.name} tracks={this.props.tracks} onRemove={this.props.onRemove} isRemoval={true}/>\r\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export const Spotify = {\r\n  _accessToken: null,\r\n  _expiresIn: null,\r\n  _userId: null,\r\n\r\n  getAccessToken(){\r\n    if (this._accessToken){\r\n      return this._accessToken;\r\n    } else if (window.location.href.match(/access_token=([^&]*)/)){\r\n      this._accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\r\n      this._expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\r\n      window.setTimeout(() => this._accessToken = '', this._expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return this._accessToken;\r\n\r\n    } else {\r\n      const clientID = \"f7827d17dafd4d18aee166e694d61941\";\r\n      const spotifyAuthorizeEndpoint = 'https://accounts.spotify.com/authorize'\r\n      let redirectURLAfterLogin = window.location.href.replaceAll('/', '%2F');\r\n      redirectURLAfterLogin = redirectURLAfterLogin.replaceAll('-', '%2D');\r\n  \r\n      const scopes = ['playlist-modify-public']\r\n      const spaceDelimiter = \"%20\"\r\n      const scopesURLParam = scopes.join(spaceDelimiter)\r\n\r\n      window.location = `${spotifyAuthorizeEndpoint}?client_id=${clientID}&redirect_uri=${redirectURLAfterLogin}&scope=${scopesURLParam}&response_type=token&show_dialogue=true`;\r\n    }\r\n  },\r\n\r\n  async search (term) {\r\n    if (!term) return [];\r\n    \r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n        headers: {Authorization: `Bearer ${this.getAccessToken()}`}\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Request failed.\");\r\n\r\n      const json = await response.json();\r\n\r\n      if (!json) return [];\r\n\r\n      const unmappedSearchResults = await json.tracks.items;\r\n\r\n      const searchResults = await unmappedSearchResults.map(track => {\r\n        return {\r\n          id: track.id,\r\n          name: track.name,\r\n          artist: track.artists[0].name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n      }})\r\n\r\n      return searchResults;\r\n    \r\n    } catch(e){\r\n      console.log(e)\r\n    }\r\n\r\n  },\r\n\r\n  async savePlaylist(name, uriArr) {\r\n    if (!name || !uriArr) return;\r\n    let headersObj = {Authorization: `Bearer ${this.getAccessToken()}`}\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me', {\r\n        headers: headersObj\r\n      })\r\n\r\n      if (!response.ok) throw new Error('User ID request failed.');\r\n\r\n      const json = await response.json();\r\n      this._userId = json.id;\r\n\r\n      const createPlaylistResponse = await fetch(`https://api.spotify.com/v1/users/${this._userId}/playlists`, {\r\n        method: 'POST',\r\n        headers: headersObj, \r\n        body: JSON.stringify({name: name})\r\n      })\r\n\r\n      if (!createPlaylistResponse.ok) throw new Error('Playlist creation request failed.');\r\n\r\n      const playlistJson = await createPlaylistResponse.json();\r\n      const playlistId = await playlistJson.id;\r\n\r\n      await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n        method: 'POST',\r\n        headers: headersObj, \r\n        body: JSON.stringify({uris: uriArr})\r\n      })\r\n\r\n      \r\n      \r\n    } catch (e){\r\n      console.log(e)\r\n    } \r\n\r\n  },\r\n\r\n}\r\n\r\n","import './App.css';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { Spotify } from '../util/Spotify';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"\",\n      playlistTracks: [],\n    }\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this)\n  }\n\n  addTrack(track){\n    if (this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)){\n     return; \n    }\n    this.setState({playlistTracks: [...this.state.playlistTracks, track]})\n  }\n\n  removeTrack(track){\n    this.setState({playlistTracks: this.state.playlistTracks.filter(playlistTrack =>\n      playlistTrack.id !== track.id)})\n  }\n\n  updatePlaylistName(name){\n    this.setState({playlistName: name})\n  }\n\n  savePlaylist(){\n    const trackURIs = this.state.playlistTracks.map(track => track.uri);\n\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n     .then(()=>{\n        this.setState({\n          playlistName: \"New Playlist\",\n          playlistTracks: []\n        })\n     })\n  }\n\n  search(term){\n    Spotify.search(term)\n      .then(results => {\n        this.setState({searchResults: results});\n      })\n  }\n\n  componentDidMount(){\n    window.addEventListener('load', () => Spotify.getAccessToken())\n  }\n\n  render(){\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className=\"App-playlist\">\n            <SearchResults tracks={this.state.searchResults} onAdd={this.addTrack}/>\n            <Playlist name={this.state.playlistName} tracks={this.state.playlistTracks} onRemove={this.removeTrack} onNameChange={this.updatePlaylistName} onSave={this.savePlaylist}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Components/App/App.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}